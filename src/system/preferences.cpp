

#include "preferences.hpp"

#include "files.hpp"

namespace sancho{
  namespace system{

    Preferences::Preferences()
      : PREFERENCES_PATH(g_build_filename(sancho::files::create_config_dir().c_str(), "preferences.ini", NULL))
    {
    }

    void Preferences::init()
    {
      if (open_preferences_file()) {
        load_values_from_file();
      }
    }

    void Preferences::save_values_to_file()
    {
      Glib::TimeVal time;
      time.assign_current_time();

      const Glib::ustring current_datetime = time.as_iso8601();

      file.set_string("sanchosql", "last_updated", current_datetime);
      file.set_comment(
        "sanchosql", "last_updated",
        "This file is automatically generated. Please do not change it!");

      // Save settings

      file.set_boolean("editor", "show_line_numbers", show_line_numbers);
      file.set_boolean("editor", "add_default_comment", add_default_comment);

      file.save_to_file(PREFERENCES_PATH);
    }

bool Preferences::open_preferences_file()
{
    try {
        file.load_from_file(PREFERENCES_PATH);

        return true;
    } catch (const Glib::Error &ex) {
      // Preferences file is not really needed (does not exist until user creates it)
      g_info("File %s not found", PREFERENCES_PATH.c_str());
    }

    return false;
}

    void Preferences::load_values_from_file()
    {
      load_editor_settings();
    }

    void Preferences::load_editor_settings()
    {
      const auto group = "editor";

      if (!file.has_group(group)) {
        return;
      }

      try {
        show_line_numbers = file.get_boolean(group, "show_line_numbers");
        add_default_comment = file.get_boolean(group, "add_default_comment");
      } catch (const Glib::KeyFileError &e) {
        g_warning("Cannot find key in group %s", group);
      }
    }
  }}
